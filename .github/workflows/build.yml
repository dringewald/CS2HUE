name: Build CS2HUE

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Uninstall self-reference to prevent build issues
        run: npm uninstall cs2hue || true

      - name: Install dmg-license on macOS only
        if: runner.os == 'macOS'
        run: npm install --save-dev dmg-license

      - name: Build app
        run: npm run dist -- --publish=never

      - name: Create setup zip
        run: |
          VERSION="1.0.0"
          OS_SUFFIX=""
          SETUP_FILE=""

          if [[ "$RUNNER_OS" == "Linux" ]]; then
            OS_SUFFIX="Linux"
            SETUP_FILE="cs2hue_${VERSION}_amd64.deb"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            OS_SUFFIX="macOS"
            SETUP_FILE="cs2hue-${VERSION}-arm64.dmg"
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            OS_SUFFIX="win"
            SETUP_FILE="cs2hue Setup ${VERSION}.exe"
          fi

          ZIP_NAME="cs2hue.Setup.${OS_SUFFIX}.${VERSION}.zip"
          mkdir zipdir

          cp "dist/$SETUP_FILE" zipdir/
          cp gamestate_integration_cs2hue.cfg zipdir/
          cp config.json zipdir/
          cp colors.json zipdir/

          cd zipdir
          zip -r "../$ZIP_NAME" .
        shell: bash

      - name: Upload setup zip
        uses: actions/upload-artifact@v4
        with:
          name: cs2hue-setup-${{ runner.os }}
          path: cs2hue.Setup.*.zip

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cs2hue-${{ runner.os }}
          path: dist/**/*