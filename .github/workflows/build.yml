name: Build CS2HUE

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Uninstall self-reference to prevent build issues
        run: npm uninstall cs2hue || true

      - name: Install dmg-license on macOS only
        if: runner.os == 'macOS'
        run: npm install --save-dev dmg-license

      - name: Build app
        run: npm run dist -- --publish=never

      - name: Extract and show version from package.json
        id: get_version
        shell: bash
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Extracted version is: $VERSION"

      - name: Prepare setup package
        id: prepare
        shell: bash
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          OS_SUFFIX=""
          SETUP_FILE=""

          if [[ "$RUNNER_OS" == "Linux" ]]; then
            OS_SUFFIX="Linux"
            SETUP_FILE="cs2hue_${VERSION}_amd64.deb"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            OS_SUFFIX="macOS"
            SETUP_FILE="cs2hue-${VERSION}-arm64.dmg"
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            OS_SUFFIX="win"
            SETUP_FILE="cs2hue Setup ${VERSION}.exe"
          fi

          DIR_NAME="cs2hue.Setup.${OS_SUFFIX}.${VERSION}"
          echo "dir_name=$DIR_NAME" >> "$GITHUB_OUTPUT"

          mkdir "$DIR_NAME"
          cp "dist/$SETUP_FILE" "$DIR_NAME/"
          cp gamestate_integration_cs2hue.cfg "$DIR_NAME/"
          cp config.json "$DIR_NAME/"
          cp colors.json "$DIR_NAME/"

      - name: Upload setup package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepare.outputs.dir_name }}
          path: ${{ steps.prepare.outputs.dir_name }}